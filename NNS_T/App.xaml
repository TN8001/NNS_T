<Application
  x:Class="NNS_T.App"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:cnv="clr-namespace:NNS_T.Utility.Converters"
  xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
  xmlns:models="clr-namespace:NNS_T.Models"
  xmlns:presentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
  xmlns:viewModels="clr-namespace:NNS_T.ViewModels"
  xmlns:views="clr-namespace:NNS_T.Views"
  StartupUri="Views/MainWindow.xaml">
  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <!--  MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive!  -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <!--  Accent and AppTheme setting  -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <!--  共通リソース  -->
      <cnv:StartTimeConverter x:Key="StartTimeConverter" />

      <!--  NoImageイメージをそれっぽく  -->
      <DrawingImage x:Key="NoImageImage" presentationOptions:Freeze="True">
        <DrawingImage.Drawing>
          <GeometryDrawing>
            <GeometryDrawing.Geometry>
              <RectangleGeometry Rect="0,0,70,70" />
            </GeometryDrawing.Geometry>
            <GeometryDrawing.Brush>
              <VisualBrush>
                <VisualBrush.Visual>
                  <Grid Width="70" Height="70">
                    <Rectangle>
                      <Rectangle.Fill>
                        <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
                          <GradientStop Color="#FF454545" />
                          <GradientStop Offset="0.5" Color="#FF454545" />
                          <GradientStop Offset="0.5" Color="Black" />
                          <GradientStop Offset="1" Color="#FF2F2F2F" />
                        </LinearGradientBrush>
                      </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock
                      Margin="0,6,0,0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      FontFamily="Microsoft Himalaya"
                      FontSize="6"
                      Foreground="#19FFFFFF"
                      RenderTransformOrigin="0.5,0.5"
                      Text="No Image"
                      TextWrapping="Wrap">
                      <TextBlock.RenderTransform>
                        <ScaleTransform ScaleX="1" ScaleY="-1" />
                      </TextBlock.RenderTransform>
                    </TextBlock>
                    <TextBlock
                      Margin="0,-6,0,0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      FontFamily="Microsoft Himalaya"
                      FontSize="6"
                      Foreground="White"
                      Text="No Image" />
                  </Grid>
                </VisualBrush.Visual>
              </VisualBrush>
            </GeometryDrawing.Brush>
          </GeometryDrawing>
        </DrawingImage.Drawing>
      </DrawingImage>

      <!--  ヘッダと中身があるようなテンプレもの向け SharedSize  -->
      <Style TargetType="HeaderedContentControl">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="HeaderedContentControl">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" SharedSizeGroup="a" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center" Text="{TemplateBinding Header}" />
                <ContentPresenter
                  Grid.Column="1"
                  Margin="{TemplateBinding Padding}"
                  VerticalAlignment="Center"
                  Content="{TemplateBinding Content}" />
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <!--  ミュートボタン  -->
      <Style x:Key="MuteButton" TargetType="ToggleButton">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="LightGray" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ToggleButton">
              <Grid>
                <Ellipse Fill="{TemplateBinding Background}" />
                <iconPacks:PackIconOcticons Kind="CircleSlash" />
              </Grid>
              <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding ProviderType}" Value="{x:Static models:ProviderType.Official}">
                  <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter Property="Foreground" Value="Red" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                  <Setter Property="Foreground" Value="DarkRed" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                  <Setter Property="Foreground" Value="Red" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <!--  ミュート解除ボタン  -->
      <Style x:Key="UnMuteButton" TargetType="Button">
        <Setter Property="Foreground" Value="LightGray" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="Button">
              <Grid>
                <Ellipse Fill="#01FFFFFF" />
                <iconPacks:PackIconOcticons Padding="1" Kind="X" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter Property="Foreground" Value="Red" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                  <Setter Property="Foreground" Value="DarkRed" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <!--  生放送アイテム  -->
      <DataTemplate DataType="{x:Type viewModels:LiveItemViewModel}">
        <Grid
          Height="80"
          Margin="1"
          TextBlock.FontSize="12">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>
          <Image
            Width="70"
            Height="70"
            Margin="10,10,0,0"
            ImageFailed="Image_ImageFailed"
            Source="{Binding IconUrl}" />
          <Border
            Padding="5,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            CornerRadius="8">
            <Border.Style>
              <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ProviderType}" Value="{x:Static models:ProviderType.Official}">
                    <Setter Property="Background" Value="#FF0080FF" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ProviderType}" Value="{x:Static models:ProviderType.User}">
                    <Setter Property="Background" Value="#FF258D8D" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ProviderType}" Value="{x:Static models:ProviderType.Channel}">
                    <Setter Property="Background" Value="#FFD9A300" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Border.Style>
            <TextBlock
              FontWeight="Bold"
              Foreground="White"
              Text="{Binding ProviderType}" />
          </Border>

          <StackPanel
            Grid.Column="1"
            Margin="10,0,0,0"
            VerticalAlignment="Top">
            <StackPanel Orientation="Horizontal"  Margin="0,0,20,0">
              <iconPacks:PackIconOcticons Foreground="#FFB2BAC2" Kind="Person" />
              <TextBlock Margin="5,0,10,0" Text="{Binding ViewCount}" />
              <iconPacks:PackIconOcticons Foreground="#FFB2BAC2" Kind="Comment" />
              <TextBlock Margin="5,0,10,0" Text="{Binding CommentCount}" />
              <iconPacks:PackIconOcticons Foreground="#FFB2BAC2" Kind="Clock" />
              <TextBlock Margin="5,0,10,0" Text="{Binding TimeshiftCount}" />
              <TextBlock Text="{Binding StartTime, Converter={StaticResource StartTimeConverter}}" />
            </StackPanel>
            <TextBlock
              FontSize="15"
              FontWeight="Bold"
              TextWrapping="Wrap">
              <views:HyperlinkEx NavigateUri="{Binding LiveUrl}"><Run Text="{Binding Title, Mode=OneTime}" /></views:HyperlinkEx>
            </TextBlock>
            <TextBlock Text="{Binding NonTagDescription}" />
          </StackPanel>
          <ToggleButton
            Grid.Column="1"
            Width="16"
            Height="16"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Command="{Binding DataContext.MuteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
            CommandParameter="{Binding}"
            IsChecked="{Binding IsMuted}"
            Style="{StaticResource MuteButton}" />
        </Grid>
      </DataTemplate>

      <!--  ミュート部屋アイテム  -->
      <DataTemplate DataType="{x:Type models:RoomModel}">
        <Grid Margin="2" TextBlock.FontSize="12">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Image
            Width="70"
            Height="70"
            Margin="10,10,0,0"
            ImageFailed="Image_ImageFailed"
            Source="{Binding IconUrl}" />
          <Border
            Padding="5,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            CornerRadius="8">
            <Border.Style>
              <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ProviderType}" Value="{x:Static models:ProviderType.Official}">
                    <Setter Property="Background" Value="#FF0080FF" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ProviderType}" Value="{x:Static models:ProviderType.User}">
                    <Setter Property="Background" Value="#FF258D8D" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ProviderType}" Value="{x:Static models:ProviderType.Channel}">
                    <Setter Property="Background" Value="#FFD9A300" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Border.Style>
            <TextBlock
              FontWeight="Bold"
              Foreground="White"
              Text="{Binding ProviderType}" />
          </Border>
          <TextBlock
            Grid.Column="1"
            Margin="10,0"
            FontSize="16"
            TextWrapping="Wrap">
            <views:HyperlinkEx NavigateUri="{Binding RoomUrl}"><Run Text="{Binding Title, Mode=OneTime}" /></views:HyperlinkEx>
          </TextBlock>
          <Button
            Grid.Column="2"
            Width="16"
            Height="16"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Command="{Binding DataContext.UnMuteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
            CommandParameter="{Binding}"
            Style="{StaticResource UnMuteButton}" />
        </Grid>
      </DataTemplate>

    </ResourceDictionary>
  </Application.Resources>
</Application>
