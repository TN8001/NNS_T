
<UserControl
  x:Class="NNS_T.Views.SearchPane"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:cnv="clr-namespace:NNS_T.Utility.Converters"
  xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:debug="debug-mode"
  xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:nicoApi="clr-namespace:NicoLiveSearch;assembly=NicoLiveSearch"
  d:DesignHeight="400"
  d:DesignWidth="400"
  mc:Ignorable="d mc">
  <UserControl.Resources>
    <cnv:IsGreaterThanConverter x:Key="IsGreaterThanConverter" />
    <cnv:Targets2CheckBoxConverter x:Key="Targets2CheckBoxConverter" />
    <cnv:Mute2VisibilityConverter x:Key="Mute2VisibilityConverter" />

    <!--  新規追加時のアピールアニメーション 赤く3回点滅  -->
    <Storyboard x:Key="Storyboard" FillBehavior="Stop">
      <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
        <EasingColorKeyFrame KeyTime="0:0:2" Value="#CCFFC0CB" />
        <EasingColorKeyFrame KeyTime="0:0:4" Value="#00FFC0CB" />
        <!--
          #if DEBUG hack
          https://stackoverflow.com/questions/8732307/does-xaml-have-a-conditional-compiler-directive-for-debug-mode
          デバッグ時はちょっとくどいので1回で終了
        -->
        <mc:AlternateContent>
          <mc:Choice Requires="debug" />
          <mc:Fallback>
            <EasingColorKeyFrame KeyTime="0:0:6" Value="#CCFFC0CB" />
            <EasingColorKeyFrame KeyTime="0:0:8" Value="#00FFC0CB" />
            <EasingColorKeyFrame KeyTime="0:0:10" Value="#CCFFC0CB" />
            <EasingColorKeyFrame KeyTime="0:0:12" Value="#00FFC0CB" />
          </mc:Fallback>
        </mc:AlternateContent>
      </ColorAnimationUsingKeyFrames>
    </Storyboard>

    <!--  アニメ適用 ミュート非表示  -->
    <Style x:Key="ListBoxItemBlinkStyle" TargetType="{x:Type ListBoxItem}">
      <Setter Property="Visibility">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource Mute2VisibilityConverter}">
            <Binding Path="DataContext.Settings.Mute.HideList" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
            <Binding Path="IsMuted" />
            <Binding Path="DataContext.Settings.Search.HideMemberOnly" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
            <Binding Path="MemberOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding IsLoaded}" Value="True">
          <DataTrigger.EnterActions>
            <BeginStoryboard Storyboard="{StaticResource Storyboard}" />
          </DataTrigger.EnterActions>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <!--  検索詳細開閉ボタン  -->
    <Style TargetType="{x:Type Expander}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Expander}">
            <StackPanel>
              <StackPanel>
                <ToggleButton
                  x:Name="headerToggle"
                  MinHeight="0"
                  Padding="0"
                  HorizontalContentAlignment="Center"
                  BorderBrush="{x:Null}"
                  Content="▼"
                  Focusable="False"
                  FontSize="6"
                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                  Style="{StaticResource AccentedSquareButtonStyle}" />
              </StackPanel>
              <Border
                x:Name="content"
                BorderBrush="{DynamicResource AccentColorBrush}"
                BorderThickness="1,0,1,1"
                Visibility="Collapsed">
                <ContentPresenter />
              </Border>
            </StackPanel>
            <ControlTemplate.Triggers>
              <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="headerToggle" Property="Content" Value="▲" />
                <Setter TargetName="content" Property="Visibility" Value="Visible" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </UserControl.Resources>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="36" />
      <RowDefinition />
    </Grid.RowDefinitions>

    <Grid Background="#01FFFFFF" MouseRightButtonDown="OnMouseRightButtonDown">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="36" />
        <ColumnDefinition Width="36" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <iconPacks:PackIconOcticons
        Grid.Column="1"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Kind="Search" />
      <TextBlock
        Grid.Column="2"
        VerticalAlignment="Center"
        FontSize="16"
        Text="Search" />
      <Label
        Grid.Column="3"
        Margin="5,0"
        Padding="2"
        HorizontalAlignment="Right"
        VerticalAlignment="Center"
        Content="{Binding HitCount, Converter={StaticResource ShortNunberConverter}}"
        ContentStringFormat="{}{0}件"
        IsEnabled="{Binding IsTimerEnabled}">
        <Label.Style>
          <Style TargetType="Label">
            <Style.Triggers>
              <DataTrigger Binding="{Binding HitCount, ConverterParameter=100, Converter={StaticResource IsGreaterThanConverter}}" Value="true">
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="ToolTip" Value="検索上限を超えています。&#x0a;取り逃しが出るので条件を絞って下さい。" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Label.Style>
      </Label>
    </Grid>

    <Grid Grid.Row="1" Margin="5,0,5,5">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <StackPanel Panel.ZIndex="1">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <!--  MahApps機能 クリアボタン ウォーターマーク  -->
          <TextBox
            VerticalContentAlignment="Center"
            controls:TextBoxHelper.ClearTextButton="True"
            controls:TextBoxHelper.Watermark="ボーカル OR ヴォーカル ミク -歌ってみた"
            Text="{Binding Settings.Search.Query}" />
          <Button
            Grid.Column="1"
            MinWidth="50"
            BorderBrush="Gray"
            BorderThickness="1"
            Click="Button_Click"
            Command="{Binding SearchCommand}"
            Content="{iconPacks:PackIconOcticons Search}"
            IsDefault="true"
            Style="{StaticResource AccentedSquareButtonStyle}" />
        </Grid>
        <Expander Margin="0,0,0,-1" IsExpanded="{Binding Settings.Window.IsExpanded}">
          <Border Padding="5">
            <StackPanel>
              <Grid>
                <RadioButton
                  HorizontalAlignment="Left"
                  VerticalAlignment="Bottom"
                  Content="タグ検索（完全一致）"
                  GroupName="Target"
                  IsChecked="{Binding Settings.Search.Targets, ConverterParameter={x:Static nicoApi:Targets.TagsExact}, Converter={StaticResource Targets2CheckBoxConverter}}" />
                <Button
                  Padding="5,0"
                  HorizontalAlignment="Right"
                  Command="{Binding NicoWebCommand}"
                  Content="niconico検索ページ" />
              </Grid>
              <Grid Margin="0,2,0,0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <RadioButton
                  x:Name="radioButton"
                  VerticalAlignment="Top"
                  Content="キーワード検索"
                  GroupName="Target"
                  IsChecked="True" />
                <WrapPanel
                  Grid.Column="1"
                  IsEnabled="{Binding IsChecked, ElementName=radioButton}"
                  Orientation="Horizontal">
                  <CheckBox
                    Margin="5,0,0,0"
                    Content="タイトル"
                    IsChecked="{Binding Settings.Search.Targets, Converter={StaticResource Targets2CheckBoxConverter}, ConverterParameter={x:Static nicoApi:Targets.Title}}" />
                  <CheckBox
                    Margin="5,0,0,0"
                    Content="説明文"
                    IsChecked="{Binding Settings.Search.Targets, Converter={StaticResource Targets2CheckBoxConverter}, ConverterParameter={x:Static nicoApi:Targets.Description}}" />
                  <CheckBox
                    Margin="5,0,0,0"
                    Content="タグ"
                    IsChecked="{Binding Settings.Search.Targets, Converter={StaticResource Targets2CheckBoxConverter}, ConverterParameter={x:Static nicoApi:Targets.Tags}}" />
                </WrapPanel>
              </Grid>
              <WrapPanel Margin="0,5,0,0" Orientation="Horizontal">
                <CheckBox
                  Margin="0,0,5,0"
                  Content="公式をミュート"
                  IsChecked="{Binding Settings.Mute.Official}" />
                <CheckBox
                  Margin="0,0,5,0"
                  Content="ミュートを表示"
                  IsChecked="{Binding Settings.Mute.ShowList}" />
                <CheckBox Content="コミュ限を非表示" IsChecked="{Binding Settings.Search.HideMemberOnly}" />
              </WrapPanel>
            </StackPanel>
          </Border>
        </Expander>
        <TextBlock Text="{Binding ErrorStatus, StringFormat=エラー:{0}}">
          <TextBlock.Style>
            <Style TargetType="TextBlock">
              <Style.Triggers>
                <DataTrigger Binding="{Binding ErrorStatus}" Value="{x:Null}">
                  <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </TextBlock.Style>
        </TextBlock>
      </StackPanel>

      <!--  アイテム数が0だった時だけ表示  -->

      <!--
        アニメーションの関係上リサイクリングは問題外
        ただのバーチャルもうまくアニメ発砲できなかった
        最大100件なのでバーチャルなしでも特に問題はないと思う
      -->
      <ListBox
        x:Name="listBox"
        Grid.Row="1"
        ItemContainerStyle="{StaticResource ListBoxItemBlinkStyle}"
        ItemsSource="{Binding Items}"
        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
        VirtualizingPanel.IsVirtualizing="False"
        VirtualizingPanel.ScrollUnit="Pixel">
        <!--<ListBox.Style>
          <Style TargetType="ListBox">
            <Setter Property="Panel.ZIndex" Value="1" />
            <Style.Triggers>
              <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}" Value="0">
                <Setter Property="Panel.ZIndex" Value="0" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ListBox.Style>-->
      </ListBox>
      <Label
        Grid.Row="1"
        HorizontalContentAlignment="Center"
        Content="Empty">
        <Label.Style>
          <Style TargetType="Label">
            <Setter Property="Visibility" Value="Hidden" />
            <Style.Triggers>
              <DataTrigger Binding="{Binding Items.Count, ElementName=listBox, Mode=OneWay}" Value="0">
                <Setter Property="Visibility" Value="Visible" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Label.Style>
      </Label>

    </Grid>
  </Grid>
</UserControl>
